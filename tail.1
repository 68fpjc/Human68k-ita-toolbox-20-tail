


TAIL(1)        Human68k ITA TOOLBOX User's Manual         TAIL(1)



名称
     tail - ファイルの末尾部分を出力する

形式
     tail [ -qvBCZ ]
     { [ {-+}count[ckl] ] [ -[count]r ] [ -- ] [ file ] } ...

解説
     tail は，各 file を順次読み取り，それぞれの末尾部分を標準出
     力に出力します．

     出力範囲は - か + に続く count で指定します．count は10進整
     数です．count の直後には，count の単位を示す次の文字を付加す
     ることができます．

     c    文字（バイト）単位
     k    1K（=1024）バイト単位
     l    行単位

     これらの文字が付加されていなければ，count は行単位となります．

     count を - に続けて指定すると，file の末尾からの count 分が
     出力されます．file の長さが count 以下である場合には file の
     内容がすべて出力されます．count が行単位であるとき，file の
     末尾に不完全行（最後の改行からファイルの終わりまでのデータ）
     があれば，それも 1行として数えます．

     count を + に続けて指定すると，file の先頭から count 分が捨
     てられ，残りすべてが出力されます．file の長さが count 以下で
     ある場合は何も出力されません．

     count のもう 1つの指定形式 -[count]r では，file の末尾の
     count 行が逆順に出力されます．count を省略すると file のすべ
     ての行が逆順に出力されます．file の長さが count 以下である場
     合も file の内容がすべて出力されます．file の末尾に不完全行
     があればそれも 1行として数えます．不完全行には改行（^M^J）が
     付加出力されます．

     count が指定されない場合のデフォルトは -10l です．

     file が 1つも指定されていない場合，または file が‘-’である
     場合には標準入力から読み取りを行います．file がオープンでき
     ないときにはエラー・メッセージを標準エラー出力に出力して処理
     を中止します．

     指定 file が 1つの場合，通常は次のように file の内容だけが出
     力されます．

          % tail -1 file1
          これは file1 の最後の行です．
          %

     最初の file の後ろにさらに引数が続いている場合には，次のよう
     に各 file の内容の前に‘==> file <==’という形のヘッダが出力
     されます．（% はシェルのプロンプトです）

          % tail -1 file1 file2
          ==> file1 <==
          これは file1 の最後の行です．

          ==> file2 <==
          これは file2 の最後の行です．
          %

     このように，2つ目以降のヘッダには改行も伴います．

     ファイル毎に別々の count を指定することができます．例を示し
     ます．

          % tail -1 file1 -2r file2 -2 file3
          ==> file1 <==
          これは file1 の最後の行です．

          ==> file2 <==
          これは file2 の最後の行です．
          これは file2 の最後から 2番目の行です．

          ==> file3 <==
          これは file3 の最後から 2番目の行です．
          これは file3 の最後の行です．
          %

     入力が cooked モードのキャラクタ・デバイス（CON など）である
     場合，^D (control-D) かまたは ^Z を読み取ると，それを EOF コー
     ドと見なして入力を打ち切ります．

     入力がファイルである場合に，テキストとバイナリとを区別して考
     える必要はありません．count が行単位であるとき，tail は，通
     常，出力が cooked モードのキャラクタ・デバイス（CON や PRN
     など）である場合にのみ，^M に続いていない ^J コードを ^M^J
     に変換して出力します．count がバイト単位であるときには，どの
     場合にもこの変換は行われません．

     tail に指定できるオプションを以下に示します．

     -q   ヘッダを決して出力しません．

     -v   ヘッダを必ず出力します．

     -B   決して ^J コードの ^M^J への変換を行いません．

     -C   count が行単位であるとき，^M に続いていない ^J コードを
          常に ^M^J に変換して出力します．count がバイト単位であ
          るときには変換しません．

     -Z   いかなる入力からも，^Z コードを EOF と見なして入力を打
          ち切ります．入力がファイルである場合，^Z コードを探す分
          遅くなります．

     これらのオプションは -q -Z のようにそれぞれ単独に記述するこ
     ともできますし，-qZ のように連結して指定することもできます．

     -q オプションと -v オプションの両方を指定した場合には，最後
     に指定した一方が有効となります．

     -B オプションと -C オプションの両方を指定した場合には，最後
     に指定した一方が有効となります．

     引数‘--’は，次の引数を file であると解釈させます．引数‘-’
     は標準入力を意味し，file として解釈されます．

関連事項
     cat(1), head(1), tee(1)

診断
     何らかのエラーがあったときにはエラー・メッセージが標準エラー
     出力に出力されます．

     終了ステータスとしては，引数の記述に間違いがあった場合には 1，
     ファイルがオープンできなかったり入力に失敗した場合には 2，出
     力エラーやメモリ不足など，システムの問題により正常に実行でき
     なかった場合には 3，すべてが正常に終了したならば 0 が返りま
     す．^C などによって中断したときの終了ステータスは OS の仕様
     によります．

不具合
     cooked モードのキャラクタ・デバイスからは，^D や ^Z を EOF
     としてではなくデータとして入力することはできません．

     CON からは行単位で入力されますので，^D あるいは ^Z の後にも
     改行が必要です．

     入力がシークできないデバイスである場合，処理できる count に
     は限界があります．

バージョン
     1.0

制作・著作
     Copyright(C)1993 by 板垣 史彦 (Itagaki Fumihiko)



1.0                 Last change: 13 Feb 1993     Itagaki Fumihiko



